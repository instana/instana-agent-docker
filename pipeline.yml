---
#
# (c) Copyright IBM Corp. 2021
# (c) Copyright Instana Inc.
#

# see https://concourse-ci.org/pipelines.html
var_sources:
  - name: local-vars
    type: dummy
    config:
      vars:
        instana-twistcli-version: '1.1.5'
resource_types:
  - name: gcs-resource
    type: registry-image
    source:
      repository: frodenas/gcs-resource
  - name: instana-version
    type: registry-image
    source:
      repository: icr.io/instana/instana-version-resource
      tag: latest
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
  - name: docker-manifest
    type: registry-image
    source:
      repository: gcr.io/instana-agent-qa/concourse-docker-manifest-resource
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: google-cloud-storage
    type: registry-image
    source:
      repository: frodenas/gcs-resource
      tag: latest

#############
# Resources #
resources:
  - name: instana-agent-docker-git
    type: git
    icon: github
    source:
      uri: https://github.com/instana/instana-agent-docker.git
      branch: ((branch))
      ignore_paths:
        - README.md
  - name: backend-version
    type: instana-version
    icon: airballoon
    source:
      endpoint: https://qa-instana.instana.io
      api_token: ((qa-instana-api-token))
      granularity: branch
  - name: agent-version
    type: semver
    source:
      driver: gcs
      bucket: instana-agent-qa-versioning
      key: agent/image
      json_key: ((project-berlin-tests-gcp-instana-qa))
  - name: slack-alert
    type: slack-notification
    source:
      url: ((tech-agent-delivery-notifications-slack-hook))
  - name: preflight
    type: google-cloud-storage
    source:
      bucket: redhat-preflight
      json_key: ((gcloud-agent-ci-account-key))
      versioned_file: preflight-linux-amd64

#################
# gcr.io images #
  - name: agent-dynamic-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: agent-dynamic-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  ## s390x images are by default built on from the j9 RPMs and will not be flagged separately
  - name: agent-dynamic-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: agent-dynamic-ppc64le
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-ppc64le-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-ppc64le
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-ppc64le-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: instana-twistcli-build-artifacts
    type: s3
    icon: zip-disk
    source:
      bucket: instana-twistcli-build-artifacts
      versioned_file: instana-twistcli-((local-vars:instana-twistcli-version)).tar.gz
      access_key_id: ((codebuild-s3-user-devinfra-key.key_id))
      secret_access_key: ((codebuild-s3-user-devinfra-key.key_secret))
      region_name: us-west-2

#################
# container.instana.io/instana images

# We don't need to differentiate different arch tags on those resources since
# this is push-only. We don't run other jobs/tasks depending on those images.

# Dynamic pre-release images will be pushed to containers.instana.io, icr.io and delivery-instana.
# Static pre-release images will only be pushed to containers.instana.io and delivery-instana due to the lack
# of authorisation on icr.io.

# pre-release dynamic images & manifest:
  - name: agent-dynamic-prerelease-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-prerelease
      repository: containers.instana.io/instana/prerelease/agent/dynamic
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-dynamic-prerelease-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-prerelease

# pre-release static images & manifest:
  - name: agent-static-prerelease-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-prerelease-static
      repository: containers.instana.io/instana/prerelease/agent/static
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-static-prerelease-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-prerelease-static
#
# release dynamic images & manifest:
  - name: agent-dynamic-release-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-release
      repository: containers.instana.io/instana/release/agent/dynamic
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-dynamic-release-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-release

# release static images & manifest:
  - name: agent-static-release-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-release-static
      repository: containers.instana.io/instana/release/agent/static
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-static-release-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-release-static

#################
# delivery-instana images

# We don't need to differentiate different arch tags on those resources since
# this is push-only. We don't run other jobs/tasks depending on those images.

# pre-release dynamic images & manifest:
  - name: agent-dynamic-prerelease-delivery-instana
    type: registry-image
    icon: docker
    source: &delivery-instana-io-prerelease
      repository: ((delivery-artifactory-docker-agent-prerelease-url))/agent/dynamic
      username: ((delivery-instana-io-internal-project-artifact-read-writer-creds.username))
      password: ((delivery-instana-io-internal-project-artifact-read-writer-creds.password))
  - name: manifest-dynamic-prerelease-delivery-instana
    type: docker-manifest
    icon: docker
    source: *delivery-instana-io-prerelease

# pre-release static images & manifest:
  - name: agent-static-prerelease-delivery-instana
    type: registry-image
    icon: docker
    source: &delivery-instana-io-prerelease-static
      repository: ((delivery-artifactory-docker-agent-prerelease-url))/agent/static
      username: ((delivery-instana-io-internal-project-artifact-read-writer-creds.username))
      password: ((delivery-instana-io-internal-project-artifact-read-writer-creds.password))
  - name: manifest-static-prerelease-delivery-instana
    type: docker-manifest
    icon: docker
    source: *delivery-instana-io-prerelease-static

# release dynamic images & manifest:
  - name: agent-dynamic-release-delivery-instana
    type: registry-image
    icon: docker
    source: &delivery-instana-io-release
      repository: ((delivery-artifactory-docker-agent-release-url))/agent/dynamic
      username: ((delivery-instana-io-release-project-artifact-read-writer-creds.username))
      password: ((delivery-instana-io-release-project-artifact-read-writer-creds.password))
  - name: manifest-dynamic-release-delivery-instana
    type: docker-manifest
    icon: docker
    source: *delivery-instana-io-release

# release static images & manifest:
  - name: agent-static-release-delivery-instana
    type: registry-image
    icon: docker
    source: &delivery-instana-io-release-static
      repository: ((delivery-artifactory-docker-agent-release-url))/agent/static
      username: ((delivery-instana-io-release-project-artifact-read-writer-creds.username))
      password: ((delivery-instana-io-release-project-artifact-read-writer-creds.password))
  - name: manifest-static-release-delivery-instana
    type: docker-manifest
    icon: docker
    source: *delivery-instana-io-release-static

#################
# gcr.io/instana-public images, release dynamic images & manifest:
  - name: agent-dynamic-release-gcr-instana-public
    type: registry-image
    icon: docker
    source: &gcr-io-instana-public-release
      repository: gcr.io/instana-public/instana-agent
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: manifest-dynamic-release-gcr-instana-public
    type: docker-manifest
    icon: docker
    source: *gcr-io-instana-public-release

#################
# icr.io images, release dynamic images & manifest:
  - name: agent-dynamic-release-icr
    type: registry-image
    icon: docker
    source: &icr-io-release
      repository: icr.io/instana/agent
      username: iamapikey
      password: ((concourse-icr-containers-public.password))
  - name: manifest-dynamic-release-icr
    type: docker-manifest
    icon: docker
    source: *icr-io-release

########
########
# Jobs #
jobs:
  - name: bump-release-version
    max_in_flight: 1
    plan:
      - get: backend-version
      - put: agent-version
        params: { bump: minor }
  - name: bump-patch-version-manual-pipeline-trigger
    max_in_flight: 1
    plan:
      - put: agent-version
        params: { bump: patch }
  - name: self-update
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
      - set_pipeline: self
        file: instana-agent-docker-git/pipeline.yml
        vars:
          branch: ((branch))
          gcp-zone: europe-west3-c
          gcp-project: instana-agent-qa

  - name: amd64-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ self-update ]
      - get: agent-version
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: build-amd64-static
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-amd64
              vars:
                flavor: static
                target-platform: linux/amd64
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-amd64-dynamic
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-amd64
              vars:
                flavor: dynamic
                target-platform: linux/amd64
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-amd64-static-j9
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-amd64-j9
              vars:
                flavor: static
                target-platform: linux/amd64
                agent-download-key: ((qa-instana-agent-key))
                classifier: -j9
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-amd64-dynamic-j9
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-amd64-j9
              vars:
                flavor: dynamic
                target-platform: linux/amd64
                agent-download-key: ((qa-instana-agent-key))
                classifier: -j9
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-amd64
              params:
                  image: image-dynamic-amd64/image.tar
            - put: agent-static-amd64
              params:
                  image: image-static-amd64/image.tar
            - put: agent-dynamic-amd64-j9
              params:
                  image: image-dynamic-amd64-j9/image.tar
            - put: agent-static-amd64-j9
              params:
                  image: image-static-amd64-j9/image.tar

  - name: arm64-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ self-update ]
      - get: agent-version
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: build-arm64-static
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-arm64
              vars:
                flavor: static
                target-platform: linux/arm64
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-arm64-dynamic
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-arm64
              vars:
                flavor: dynamic
                target-platform: linux/arm64
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-arm64-static-j9
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-arm64-j9
              vars:
                flavor: static
                target-platform: linux/arm64
                agent-download-key: ((qa-instana-agent-key))
                classifier: -j9
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-arm64-dynamic-j9
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-arm64-j9
              vars:
                flavor: dynamic
                target-platform: linux/arm64
                agent-download-key: ((qa-instana-agent-key))
                classifier: -j9
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-arm64
              params:
                  image: image-dynamic-arm64/image.tar
            - put: agent-static-arm64
              params:
                  image: image-static-arm64/image.tar
            - put: agent-dynamic-arm64-j9
              params:
                  image: image-dynamic-arm64-j9/image.tar
            - put: agent-static-arm64-j9
              params:
                  image: image-static-arm64-j9/image.tar

  - name: s390x-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ self-update ]
      - get: agent-version
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: build-s390x-static
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-s390x
              vars:
                flavor: static
                target-platform: linux/s390x
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-s390x-dynamic
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-s390x
              vars:
                flavor: dynamic
                target-platform: linux/s390x
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-s390x
              params:
                  image: image-dynamic-s390x/image.tar
            - put: agent-static-s390x
              params:
                  image: image-static-s390x/image.tar

  - name: ppc64le-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ self-update ]
      - get: agent-version
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - task: build-ppc64le-static
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-static-ppc64le
              vars:
                flavor: static
                target-platform: linux/ppc64le
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
            - task: build-ppc64le-dynamic
              privileged: true
              file: instana-agent-docker-git/ci/container-image-build-task.yml
              input_mapping:
                source: instana-agent-docker-git
              output_mapping: 
                image: image-dynamic-ppc64le
              vars:
                flavor: dynamic
                target-platform: linux/ppc64le
                agent-download-key: ((qa-instana-agent-key))
                classifier: ''
                version: ((.:agent-version))
                commit-sha: ((.:commit-sha))
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-ppc64le
              params:
                  image: image-dynamic-ppc64le/image.tar
            - put: agent-static-ppc64le
              params:
                  image: image-static-ppc64le/image.tar

  - name: twistlock-security-scan
    max_in_flight: 1
    plan:
      - get: agent-static-amd64
        passed: [amd64-build]
      - get: agent-static-amd64-j9
        passed: [amd64-build]
        trigger: true
      - get: agent-version
        passed: [ amd64-build, arm64-build, s390x-build, ppc64le-build ]
      - get: instana-twistcli-build-artifacts
      - get: instana-agent-docker-git
        passed: [ amd64-build, arm64-build, s390x-build, ppc64le-build ]
      - load_var: digest-amd64
        file: agent-static-amd64/digest
      - load_var: digest-amd64-j9
        file: agent-static-amd64-j9/digest
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - task: prepare-instana-twistcli-inputs
        file: instana-agent-docker-git/ci/prepare-instana-twistcli-inputs-task.yml
        vars:
          instana-twistcli-version: ((local-vars:instana-twistcli-version))
      - in_parallel:
          steps:
          - task: scan-image-amd64-static
            privileged: true
            file: instana-twistcli-inputs/scan-image.yml
            vars:
              target-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest-amd64))
            params:
              DOCKER_JSON_KEY: ((project-berlin-tests-gcp-instana-qa))
              IGNOREFILE: instana-twistcli-inputs/.twistlockignore-amd64-static
              SAVE_SCAN_RESULTS: "true"
          - task: scan-image-amd64-j9-static
            privileged: true
            file: instana-twistcli-inputs/scan-image.yml
            vars:
              target-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest-amd64-j9))
            params:
              DOCKER_JSON_KEY: ((project-berlin-tests-gcp-instana-qa))
              IGNOREFILE: instana-twistcli-inputs/.twistlockignore-amd64-static
              SAVE_SCAN_RESULTS: "true"
  - name: verify-amd64-static
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm
    on_error: *destroy-amd64-static-vm
    on_failure:  *destroy-amd64-static-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-static-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-static-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm-j9
    on_error: *destroy-amd64-static-vm-j9
    on_failure:  *destroy-amd64-static-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64-j9
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-static-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static-j9
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-dynamic
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm
    on_error: *destroy-amd64-dynamic-vm
    on_failure:  *destroy-amd64-dynamic-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-dynamic-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-dynamic-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm-j9
    on_error: *destroy-amd64-dynamic-vm-j9
    on_failure:  *destroy-amd64-dynamic-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64-j9
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-dynamic-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic-j9
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verification-gate
    plan:
      - get: instana-agent-docker-git
        passed: [ ppc64le-build, s390x-build, arm64-build, amd64-build, twistlock-security-scan, verify-amd64-static, verify-amd64-dynamic, verify-amd64-static-j9, verify-amd64-dynamic-j9 ]
      - get: agent-version
        passed: [ ppc64le-build, s390x-build, arm64-build, amd64-build, twistlock-security-scan, verify-amd64-static, verify-amd64-dynamic, verify-amd64-static-j9, verify-amd64-dynamic-j9 ]
        trigger: true
      - get: agent-dynamic-amd64
        passed: [ verify-amd64-dynamic ]
        params:
          skip_download: true
      - get: agent-dynamic-amd64-j9
        passed: [ verify-amd64-dynamic-j9 ]
        params:
          skip_download: true
      - get: agent-dynamic-arm64
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-dynamic-arm64-j9
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-dynamic-s390x
        passed: [ s390x-build ]
        params:
          skip_download: true
      - get: agent-dynamic-ppc64le
        passed: [ ppc64le-build ]
        params:
          skip_download: true

      - get: agent-static-amd64
        passed: [ verify-amd64-static ]
        params:
          skip_download: true
      - get: agent-static-amd64-j9
        passed: [ verify-amd64-static-j9 ]
        params:
          skip_download: true
      - get: agent-static-arm64
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-static-arm64-j9
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-static-s390x
        passed: [ s390x-build ]
        params:
          skip_download: true
      - get: agent-static-ppc64le
        passed: [ ppc64le-build ]
        params:
          skip_download: true

###################################
# Pre-release                     #
# Build & publish image manifests #
# containers.instana.io           #
# delivery-instana                #
  - name: prerelease-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-dynamic-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-dynamic-amd64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-arm64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-delivery-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-static-amd64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-arm64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - in_parallel:
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-static-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-static-amd64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-arm64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - in_parallel:
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-delivery-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
####################################
# Release                          #
# Build & publish image manifests  #
# containers.instana.io            #
# delivery-instana                 #
# icr.io                           #
# scan.connect.redhat.com          #
  - name: agent-release-trigger
    plan:
      - get: instana-agent-docker-git
        passed: [ prerelease-multiarch-dynamic, prerelease-multiarch-static, prerelease-multiarch-dynamic-j9, prerelease-multiarch-static-j9 ]
        params: &release-trigger-params
          skip_download: true
      - get: agent-version
        passed: [ prerelease-multiarch-dynamic, prerelease-multiarch-static, prerelease-multiarch-dynamic-j9, prerelease-multiarch-static-j9 ]
        params: *release-trigger-params

      - get: agent-dynamic-amd64
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-amd64-j9
        passed: [ prerelease-multiarch-dynamic-j9 ]
        params: *release-trigger-params
      - get: agent-dynamic-arm64
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-arm64-j9
        passed: [ prerelease-multiarch-dynamic-j9 ]
        params: *release-trigger-params
      - get: agent-dynamic-s390x
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-ppc64le
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params

      - get: agent-static-amd64
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-amd64-j9
        passed: [ prerelease-multiarch-static-j9 ]
        params: *release-trigger-params
      - get: agent-static-arm64
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-arm64-j9
        passed: [ prerelease-multiarch-static-j9 ]
        params: *release-trigger-params
      - get: agent-static-s390x
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-ppc64le
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
#
  - name: release-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-amd64/image.tar
              additional_tags: agent-dynamic-amd64/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-arm64/image.tar
              additional_tags: agent-dynamic-arm64/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-s390x/image.tar
              additional_tags: agent-dynamic-s390x/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-ppc64le/image.tar
              additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-gcr-instana-public
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-icr
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-rh-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file-rh.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'
      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: preflight
      # Docker manifest is currently usupported by Red Hat container registry
      - in_parallel:
        - load_var: redhat-tag-amd64
          file: version/redhat-tag-amd64
          reveal: true
        - load_var: redhat-tag-arm64
          file: version/redhat-tag-arm64
          reveal: true
        - load_var: redhat-tag-s390x
          file: version/redhat-tag-s390x
          reveal: true
        - load_var: redhat-tag-ppc64le
          file: version/redhat-tag-ppc64le
          reveal: true
        - load_var: redhat-tag-amd64-j9
          file: version/redhat-tag-amd64-j9
          reveal: true
      - in_parallel:
        - task: agent-dynamic-release-redhat-amd64
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          privileged: true
          input_mapping:
            image: agent-dynamic-amd64
            preflight: preflight
          vars:
            new_tag: ((.:redhat-tag-amd64))
            latest: true
        - task: agent-dynamic-release-redhat-arm64
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          privileged: true
          input_mapping:
            image: agent-dynamic-arm64
            preflight: preflight
          vars:
            new_tag: ((.:redhat-tag-arm64))
            latest: false
        - task: agent-dynamic-release-redhat-s390x
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          privileged: true
          input_mapping:
            image: agent-dynamic-s390x
            preflight: preflight
          vars:
            new_tag: ((.:redhat-tag-s390x))
            latest: false
        - task: agent-dynamic-release-redhat-ppc64le
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          privileged: true
          input_mapping:
            image: agent-dynamic-ppc64le
            preflight: preflight
          vars:
            new_tag: ((.:redhat-tag-ppc64le))
            latest: false
        - task: agent-dynamic-release-redhat-amd64-j9
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          privileged: true
          input_mapping:
            image: agent-dynamic-amd64-j9
            preflight: preflight
          vars:
            new_tag: ((.:redhat-tag-amd64-j9))
            latest: false

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-dynamic-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-dynamic-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - in_parallel:
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-release-delivery-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - in_parallel:
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-amd64-j9/image.tar
              additional_tags: agent-dynamic-amd64-j9/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-arm64-j9/image.tar
              additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-gcr-instana-public
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - in_parallel:
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-icr
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-static-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-release-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - in_parallel:
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-static-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-static-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-arm64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-release-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - in_parallel:
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-delivery-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-delivery-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
