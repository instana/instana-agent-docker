---
#
# (c) Copyright IBM Corp. 2021
# (c) Copyright Instana Inc.
#

# see https://concourse-ci.org/pipelines.html
var_sources:
  - name: local-vars
    type: dummy
    config:
      vars:
        instana-twistcli-version: '1.1.2'
resource_types:
  - name: codebuild
    type: registry-image
    source:
      repository: cedricziel/concourse-codebuild-resource
      tag: "0.1.14"
  - name: gcs-resource
    type: registry-image
    source:
      repository: frodenas/gcs-resource
  - name: instana-version
    type: registry-image
    source:
      repository: icr.io/instana/instana-version-resource
      tag: latest
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
  - name: docker-manifest
    type: registry-image
    source:
      repository: gcr.io/instana-agent-qa/concourse-docker-manifest-resource
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: google-cloud-storage
    type: registry-image
    source:
      repository: frodenas/gcs-resource

#############
# Resources #
resources:
  - name: instana-agent-docker-git
    type: git
    icon: github
    source:
      uri: https://github.com/instana/instana-agent-docker.git
      branch: ((branch))
      ignore_paths:
        - README.md
  - name: backend-version
    type: instana-version
    icon: airballoon
    source:
      endpoint: https://qa-instana.instana.io
      api_token: ((qa-instana-api-token))
      granularity: branch
  - name: agent-version
    type: semver
    source:
      driver: gcs
      bucket: instana-agent-qa-versioning
      key: agent/image
      json_key: ((project-berlin-tests-gcp-instana-qa))
  - name: slack-alert
    type: slack-notification
    source:
      url: ((tech-agent-delivery-notifications-slack-hook))
  - name: build-bundle
    type: s3
    icon: zip-disk
    source:
      bucket: instana-agent-images-codebuild
      versioned_file: context.zip
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
      region_name: us-west-2
      skip_download: true
  - name: preflight
    type: github-release
    source:
      owner: redhat-openshift-ecosystem
      repository: openshift-preflight
#############
# Codebuild #
  - name: codebuild-dynamic-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-amd64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-amd64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: codebuild-dynamic-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-arm64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-arm64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: codebuild-dynamic-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: codebuild-dynamic-ppc64le
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-ppc64le
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

#################
# gcr.io images #
  - name: agent-dynamic-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: agent-dynamic-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  ## s390x images are by default built on from the j9 RPMs and will not be flagged separately
  - name: agent-dynamic-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: agent-dynamic-ppc64le
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-ppc64le-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-ppc64le
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-ppc64le-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: instana-twistcli-build-artifacts
    type: s3
    icon: zip-disk
    source:
      bucket: instana-twistcli-build-artifacts
      versioned_file: instana-twistcli-((local-vars:instana-twistcli-version)).tar.gz
      access_key_id: ((codebuild-s3-user-devinfra-key.key_id))
      secret_access_key: ((codebuild-s3-user-devinfra-key.key_secret))
      region_name: us-west-2

  ## Redhat OC sources
  - name: agent-rh-sources
    type: google-cloud-storage
    source:
      bucket: agent-rh-sources
      json_key: ((gcloud-agent-ci-account-key))
      regexp: oc-(.*).tar.gz

#################
# container.instana.io/instana images

# We don't need to differentiate different arch tags on those resources since
# this is push-only. We don't run other jobs/tasks depending on those images.

# Dynamic pre-release images will be pushed to containers.instana.io & icr.io.
# Static pre-release images will only be pushed to containers.instana.io due to the lack
# of authorisation on icr.io.

# pre-release dynamic images & manifest:
  - name: agent-dynamic-prerelease-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-prerelease
      repository: containers.instana.io/instana/prerelease/agent/dynamic
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-dynamic-prerelease-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-prerelease

# pre-release static images & manifest:
  - name: agent-static-prerelease-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-prerelease-static
      repository: containers.instana.io/instana/prerelease/agent/static
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-static-prerelease-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-prerelease-static
#
# release dynamic images & manifest:
  - name: agent-dynamic-release-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-release
      repository: containers.instana.io/instana/release/agent/dynamic
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-dynamic-release-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-release

# release static images & manifest:
  - name: agent-static-release-instana
    type: registry-image
    icon: docker
    source: &containers-instana-io-release-static
      repository: containers.instana.io/instana/release/agent/static
      username: ((containers-instana-io-creds.username))
      password: ((containers-instana-io-creds.password))
  - name: manifest-static-release-instana
    type: docker-manifest
    icon: docker
    source: *containers-instana-io-release-static

#################
# gcr.io/instana-public images, release dynamic images & manifest:
  - name: agent-dynamic-release-gcr-instana-public
    type: registry-image
    icon: docker
    source: &gcr-io-instana-public-release
      repository: gcr.io/instana-public/instana-agent
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: manifest-dynamic-release-gcr-instana-public
    type: docker-manifest
    icon: docker
    source: *gcr-io-instana-public-release

#################
# icr.io images, release dynamic images & manifest:
  - name: agent-dynamic-release-icr
    type: registry-image
    icon: docker
    source: &icr-io-release
      repository: icr.io/instana/agent
      username: iamapikey
      password: ((concourse-icr-containers-public.password))
  - name: manifest-dynamic-release-icr
    type: docker-manifest
    icon: docker
    source: *icr-io-release

########
########
# Jobs #
jobs:
  - name: bump-release-version
    max_in_flight: 1
    plan:
      - get: backend-version
      - put: agent-version
        params: { bump: minor }
  - name: bump-patch-version-manual-pipeline-trigger
    max_in_flight: 1
    plan:
      - put: agent-version
        params: { bump: patch }
  - name: self-update
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
      - set_pipeline: self
        file: instana-agent-docker-git/pipeline.yml
        vars:
          branch: ((branch))
          gcp-zone: europe-west3-c
          gcp-project: instana-agent-qa
  - name: prepare-build-bundle
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ self-update ]
      - get: agent-version
        trigger: true
      - task: package-build-bundle
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ubuntu
              tag: focal
          inputs:
            - name: instana-agent-docker-git
              path: .
            - name: agent-version
          run:
            path: bash
            args:
              - -ce
              - |
                date
                apt update
                apt install -yqq zip unzip
                zip -r target/context.zip .
          outputs:
            - name: target
      - put: build-bundle
        params:
          file: target/context.zip

  - name: amd64-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        passed: [ prepare-build-bundle ]
        trigger: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - get: agent-version
        passed: [prepare-build-bundle]
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-dynamic-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-static-amd64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-dynamic-amd64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-amd64
              params:
                  image: codebuild-dynamic-amd64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-amd64/artifacts/tag
            - put: agent-static-amd64
              params:
                  image: codebuild-static-amd64/artifacts/image.tar
                  additional_tags: codebuild-static-amd64/artifacts/tag
            - put: agent-dynamic-amd64-j9
              params:
                  image: codebuild-dynamic-amd64-j9/artifacts/image.tar
                  additional_tags: codebuild-dynamic-amd64-j9/artifacts/tag
            - put: agent-static-amd64-j9
              params:
                  image: codebuild-static-amd64-j9/artifacts/image.tar
                  additional_tags: codebuild-static-amd64-j9/artifacts/tag

  - name: arm64-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        passed: [ prepare-build-bundle ]
        trigger: true
      - get: agent-version
        passed: [ prepare-build-bundle ]
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-dynamic-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-static-arm64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-dynamic-arm64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-arm64
              params:
                  image: codebuild-dynamic-arm64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-arm64/artifacts/tag
            - put: agent-static-arm64
              params:
                  image: codebuild-static-arm64/artifacts/image.tar
                  additional_tags: codebuild-static-arm64/artifacts/tag
            - put: agent-dynamic-arm64-j9
              params:
                  image: codebuild-dynamic-arm64-j9/artifacts/image.tar
                  additional_tags: codebuild-dynamic-arm64-j9/artifacts/tag
            - put: agent-static-arm64-j9
              params:
                  image: codebuild-static-arm64-j9/artifacts/image.tar
                  additional_tags: codebuild-static-arm64-j9/artifacts/tag

  - name: s390x-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        passed: [ prepare-build-bundle ]
        trigger: true
      - get: agent-version
        passed: [ prepare-build-bundle ]
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
            - put: codebuild-dynamic-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-s390x
              params:
                  image: codebuild-dynamic-s390x/artifacts/image.tar
                  additional_tags: codebuild-dynamic-s390x/artifacts/tag
            - put: agent-static-s390x
              params:
                  image: codebuild-static-s390x/artifacts/image.tar
                  additional_tags: codebuild-static-s390x/artifacts/tag

  - name: ppc64le-build
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        passed: [ prepare-build-bundle ]
        trigger: true
      - get: agent-version
        passed: [ prepare-build-bundle ]
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-ppc64le
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: ppc64le
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/ppc64le
            - put: codebuild-dynamic-ppc64le
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: ppc64le
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/ppc64le
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-ppc64le
              params:
                  image: codebuild-dynamic-ppc64le/artifacts/image.tar
                  additional_tags: codebuild-dynamic-ppc64le/artifacts/tag
            - put: agent-static-ppc64le
              params:
                  image: codebuild-static-ppc64le/artifacts/image.tar
                  additional_tags: codebuild-static-ppc64le/artifacts/tag

  - name: twistlock-security-scan
    max_in_flight: 1
    plan:
      - get: agent-static-amd64
        passed: [amd64-build]
      - get: agent-static-amd64-j9
        passed: [amd64-build]
        trigger: true
      - get: agent-version
        passed: [ amd64-build, arm64-build, s390x-build, ppc64le-build ]
      - get: instana-twistcli-build-artifacts
      - get: instana-agent-docker-git
        passed: [ amd64-build, arm64-build, s390x-build, ppc64le-build ]
      - load_var: digest-amd64
        file: agent-static-amd64/digest
      - load_var: digest-amd64-j9
        file: agent-static-amd64-j9/digest
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - task: prepare-instana-twistcli-inputs
        file: instana-agent-docker-git/ci/prepare-instana-twistcli-inputs-task.yml
        vars:
          instana-twistcli-version: ((local-vars:instana-twistcli-version))
      - in_parallel:
          steps:
          - task: scan-image-amd64-static
            privileged: true
            file: instana-twistcli-inputs/scan-image.yml
            vars:
              target-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest-amd64))
              ignorefile: instana-twistcli-inputs/.twistlockignore-amd64-static
              min-vuln-severity: ''
            params:
              DOCKER_JSON_KEY: ((project-berlin-tests-gcp-instana-qa))
              SAVE_SCAN_RESULTS: "true"
          - task: scan-image-amd64-j9-static
            privileged: true
            file: instana-twistcli-inputs/scan-image.yml
            vars:
              target-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest-amd64-j9))
              ignorefile: instana-twistcli-inputs/.twistlockignore-amd64-static
              min-vuln-severity: ''
            params:
              DOCKER_JSON_KEY: ((project-berlin-tests-gcp-instana-qa))
              SAVE_SCAN_RESULTS: "true"
  - name: verify-amd64-static
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm
    on_error: *destroy-amd64-static-vm
    on_failure:  *destroy-amd64-static-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-static-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-static-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm-j9
    on_error: *destroy-amd64-static-vm-j9
    on_failure:  *destroy-amd64-static-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64-j9
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-static-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static-j9
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-dynamic
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm
    on_error: *destroy-amd64-dynamic-vm
    on_failure:  *destroy-amd64-dynamic-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-dynamic-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verify-amd64-dynamic-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm-j9
    on_error: *destroy-amd64-dynamic-vm-j9
    on_failure:  *destroy-amd64-dynamic-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64-j9
        passed: [amd64-build]
        trigger: true
      - load_var: digest
        file: agent-dynamic-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic-j9
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c

  - name: verification-gate
    plan:
      - get: instana-agent-docker-git
        passed: [ prepare-build-bundle, ppc64le-build, s390x-build, arm64-build, amd64-build, twistlock-security-scan, verify-amd64-static, verify-amd64-dynamic, verify-amd64-static-j9, verify-amd64-dynamic-j9 ]
      - get: agent-version
        passed: [ prepare-build-bundle, ppc64le-build, s390x-build, arm64-build, amd64-build, twistlock-security-scan, verify-amd64-static, verify-amd64-dynamic, verify-amd64-static-j9, verify-amd64-dynamic-j9 ]
        trigger: true
      - get: agent-dynamic-amd64
        passed: [ verify-amd64-dynamic ]
        params:
          skip_download: true
      - get: agent-dynamic-amd64-j9
        passed: [ verify-amd64-dynamic-j9 ]
        params:
          skip_download: true
      - get: agent-dynamic-arm64
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-dynamic-arm64-j9
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-dynamic-s390x
        passed: [ s390x-build ]
        params:
          skip_download: true
      - get: agent-dynamic-ppc64le
        passed: [ ppc64le-build ]
        params:
          skip_download: true

      - get: agent-static-amd64
        passed: [ verify-amd64-static ]
        params:
          skip_download: true
      - get: agent-static-amd64-j9
        passed: [ verify-amd64-static-j9 ]
        params:
          skip_download: true
      - get: agent-static-arm64
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-static-arm64-j9
        passed: [ arm64-build ]
        params:
          skip_download: true
      - get: agent-static-s390x
        passed: [ s390x-build ]
        params:
          skip_download: true
      - get: agent-static-ppc64le
        passed: [ ppc64le-build ]
        params:
          skip_download: true

###################################
# Pre-release                     #
# Build & publish image manifests #
# containers.instana.io           #
  - name: prerelease-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest
      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-dynamic-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-dynamic-amd64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-arm64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-prerelease-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-static-amd64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-arm64
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: prerelease-multiarch-static-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ verification-gate ]
      - get: agent-version
        passed: [ verification-gate ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'prerelease'

      - in_parallel:
        - get: agent-static-amd64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-arm64-j9
          passed: [ verification-gate ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ verification-gate ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-prerelease-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-prerelease-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
########################################################################
# Release                                                              #
# Build & publish image manifests                                      #
# containers.instana.io + icr.io + scan.connect.redhat.com             #
  - name: agent-release-trigger
    plan:
      - get: instana-agent-docker-git
        passed: [ prerelease-multiarch-dynamic, prerelease-multiarch-static, prerelease-multiarch-dynamic-j9, prerelease-multiarch-static-j9 ]
        params: &release-trigger-params
          skip_download: true
      - get: agent-version
        passed: [ prerelease-multiarch-dynamic, prerelease-multiarch-static, prerelease-multiarch-dynamic-j9, prerelease-multiarch-static-j9 ]
        params: *release-trigger-params

      - get: agent-dynamic-amd64
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-amd64-j9
        passed: [ prerelease-multiarch-dynamic-j9 ]
        params: *release-trigger-params
      - get: agent-dynamic-arm64
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-arm64-j9
        passed: [ prerelease-multiarch-dynamic-j9 ]
        params: *release-trigger-params
      - get: agent-dynamic-s390x
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params
      - get: agent-dynamic-ppc64le
        passed: [ prerelease-multiarch-dynamic ]
        params: *release-trigger-params

      - get: agent-static-amd64
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-amd64-j9
        passed: [ prerelease-multiarch-static-j9 ]
        params: *release-trigger-params
      - get: agent-static-arm64
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-arm64-j9
        passed: [ prerelease-multiarch-static-j9 ]
        params: *release-trigger-params
      - get: agent-static-s390x
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
      - get: agent-static-ppc64le
        passed: [ prerelease-multiarch-static ]
        params: *release-trigger-params
#
  - name: release-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-amd64/image.tar
              additional_tags: agent-dynamic-amd64/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-arm64/image.tar
              additional_tags: agent-dynamic-arm64/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-s390x/image.tar
              additional_tags: agent-dynamic-s390x/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-ppc64le/image.tar
              additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-gcr-instana-public
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - in_parallel:
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-amd64/image.tar
            additional_tags: agent-dynamic-amd64/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-arm64/image.tar
            additional_tags: agent-dynamic-arm64/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-s390x/image.tar
            additional_tags: agent-dynamic-s390x/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-ppc64le/image.tar
            additional_tags: agent-dynamic-ppc64le/tag

      - put: manifest-dynamic-release-icr
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-dynamic-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-dynamic-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-rh-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true
      - get: agent-rh-sources
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file-rh.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'
      - in_parallel:
        - get: agent-dynamic-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: preflight
          params:
            globs:
              - preflight-linux-amd64
      # Docker manifest is currently usupported by Red Hat container registry
      # latest tag is not allowed during image certification
      - in_parallel:
        - load_var: redhat-tag-amd64
          file: version/redhat-tag-amd64
        - load_var: redhat-tag-arm64
          file: version/redhat-tag-arm64
        - load_var: redhat-tag-s390x
          file: version/redhat-tag-s390x
        - load_var: redhat-tag-ppc64le
          file: version/redhat-tag-ppc64le
        - load_var: redhat-tag-amd64-j9
          file: version/redhat-tag-amd64-j9
       - in_parallel:
        - task: agent-dynamic-release-redhat-amd64
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-amd64
            preflight: preflight
          vars:
            tag_name: ((redhat-tag-amd64))
        - task: agent-dynamic-release-redhat-amd64
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-amd64
            preflight: preflight
          vars:
            tag_name: latest
        - task: agent-dynamic-release-redhat-arm64
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-arm64
            preflight: preflight
          vars:
            tag_name: ((redhat-tag-arm64))
        - task: agent-dynamic-release-redhat-s390x
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-s390x
            preflight: preflight
          vars:
            tag_name: ((redhat-tag-s390x))
        - task: agent-dynamic-release-redhat-ppc64le
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-ppc64le
            preflight: preflight
          vars:
            tag_name: ((redhat-tag-ppc64le))
        - task: agent-dynamic-release-redhat-amd64-j9
          file: instana-agent-docker-git/ci/docker-push-rh-verify.yml
          input_mapping:
            image: agent-dynamic-amd64-j9
            preflight: preflight
          vars:
            tag_name: ((redhat-tag-amd64-j9))

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-dynamic-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: dynamic-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: dynamic
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-dynamic-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-dynamic-arm64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-release-instana
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - in_parallel:
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-amd64-j9/image.tar
              additional_tags: agent-dynamic-amd64-j9/tag
          - put: agent-dynamic-release-gcr-instana-public
            params:
              image: agent-dynamic-arm64-j9/image.tar
              additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-gcr-instana-public
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - in_parallel:
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-amd64-j9/image.tar
            additional_tags: agent-dynamic-amd64-j9/tag
        - put: agent-dynamic-release-icr
          params:
            image: agent-dynamic-arm64-j9/image.tar
            additional_tags: agent-dynamic-arm64-j9/tag

      - put: manifest-dynamic-release-icr
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-dynamic-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-dynamic-arm64-j9/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: ''
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-static-amd64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-arm64
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-release-instana
          params:
            image: agent-static-amd64/image.tar
            additional_tags: agent-static-amd64/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-arm64/image.tar
            additional_tags: agent-static-arm64/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: release-multiarch-static-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        passed: [ agent-release-trigger ]
      - get: agent-version
        passed: [ agent-release-trigger ]
        trigger: true

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true

      # create "latest"/"latest-j9", "<version>"/"<version>-j9"
      # and "<commit-sha>"/"<commit-sha>-j9" tags for the manifest in version/manifest-tags
      - task: static-multiarch-manifest-tags-j9
        privileged: true
        file: instana-agent-docker-git/ci/create-tag-file.yml
        output_mapping:
          message: message
          version: version
        vars:
          flavor: static
          classifier: '-j9'
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          release-tree: 'release'

      - in_parallel:
        - get: agent-static-amd64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-s390x
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-arm64-j9
          passed: [ agent-release-trigger ]
          params:
            format: oci
        - get: agent-static-ppc64le
          passed: [ agent-release-trigger ]
          params:
            format: oci

      - in_parallel:
        - put: agent-static-release-instana
          params:
            image: agent-static-amd64-j9/image.tar
            additional_tags: agent-static-amd64-j9/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-arm64-j9/image.tar
            additional_tags: agent-static-arm64-j9/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-s390x/image.tar
            additional_tags: agent-static-s390x/tag
        - put: agent-static-release-instana
          params:
            image: agent-static-ppc64le/image.tar
            additional_tags: agent-static-ppc64le/tag

      - put: manifest-static-release-instana
        params:
          tag_file: version/manifest-tags
          manifests:
            - arch: amd64
              os: linux
              digest_file: agent-static-amd64-j9/digest
            - arch: arm64
              os: linux
              digest_file: agent-static-arm64-j9/digest
            - arch: s390x
              os: linux
              digest_file: agent-static-s390x/digest
            - arch: ppc64le
              os: linux
              digest_file: agent-static-ppc64le/digest

      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
