---
# see https://concourse-ci.org/pipelines.html
resource_types:
  - name: codebuild
    type: registry-image
    source:
      repository: cedricziel/concourse-codebuild-resource
      tag: "0.1.14"
  - name: gcs-resource
    type: registry-image
    source:
      repository: frodenas/gcs-resource
  - name: instana-version
    type: registry-image
    source:
      repository: instana/instana-version-resource
      tag: latest
  - name: slack-notification
    type: registry-image
    source:
      repository: cfcommunity/slack-notification-resource
      tag: latest
resources:
  - name: instana-agent-docker-git
    type: git
    icon: github
    source:
      uri: https://github.com/instana/instana-agent-docker.git
      branch: ((branch))
      ignore_paths:
        - README.md
  - name: backend-version
    type: instana-version
    icon: airballoon
    source:
      endpoint: https://qa-instana.instana.io
      api_token: ((qa-instana-api-token))
      granularity: branch
  - name: agent-version
    type: semver
    source:
      driver: gcs
      bucket: instana-agent-qa-versioning
      key: agent/image
      json_key: ((project-berlin-tests-gcp-instana-qa))
  - name: slack-alert
    type: slack-notification
    source:
      url: ((tech-agent-delivery-notifications-slack-hook))
  
  ## amd64 packages
  - name: rpm-static-x86_64
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-(2.*)\.x86_64\.rpm
  - name: rpm-dynamic-x86_64
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-(2.*)\.x86_64\.rpm
  - name: rpm-static-x86_64-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-j9-(2.*)\.x86_64\.rpm
  - name: rpm-dynamic-x86_64-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-j9-(2.*)\.x86_64\.rpm
  
  ## aarch64 packages
  - name: rpm-static-aarch64
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-(2.*)\.aarch64\.rpm
  - name: rpm-dynamic-aarch64
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-(2.*)\.aarch64\.rpm
  - name: rpm-static-aarch64-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-j9-(.*)\.aarch64\.rpm
  - name: rpm-dynamic-aarch64-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-j9-(.*)\.aarch64\.rpm

  ## s390x packages
  - name: rpm-static-s390x
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-(2.*)\.s390x\.rpm
  - name: rpm-dynamic-s390x
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-(2.*)\.s390x\.rpm
  - name: rpm-static-s390x-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-static-j9-(2.*)\.s390x\.rpm
  - name: rpm-dynamic-s390x-j9
    type: gcs-resource
    source:
      bucket: agent-ci
      json_key: ((gcloud-agent-ci-account-key))
      regexp: packages/instana-agent-dynamic-j9-(2.*)\.s390x\.rpm

  - name: build-bundle
    type: s3
    icon: zip-disk
    source:
      bucket: instana-agent-images-codebuild
      versioned_file: context.zip
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
      region_name: us-west-2
      skip_download: true

  - name: codebuild-dynamic-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-amd64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-amd64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: codebuild-dynamic-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-arm64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-arm64-j9
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))

  - name: codebuild-dynamic-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  
  - name: agent-dynamic-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-arm64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  - name: agent-dynamic-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64-j9
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static-j9
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

  ## s390x images are by default built on from the j9 RPMs and will not be flagged separately
  - name: agent-dynamic-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))

jobs:
  - name: bump-release-version
    max_in_flight: 1
    plan:
      - get: backend-version
      - put: agent-version
        params: { bump: minor }
  - name: self-update
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
      - set_pipeline: self
        file: instana-agent-docker-git/pipeline.yml
        vars:
          branch: ((branch))
          gcp-zone: europe-west3-c
          gcp-project: instana-agent-qa
  - name: prepare-build-bundle
    max_in_flight: 1
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ self-update ]
      - get: rpm-static-x86_64
        trigger: true
      - get: rpm-dynamic-x86_64
        trigger: true
      - get: rpm-static-x86_64-j9
        trigger: true
      - get: rpm-dynamic-x86_64-j9
        trigger: true
      - get: rpm-static-aarch64
        trigger: true
      - get: rpm-dynamic-aarch64
        trigger: true
      - get: rpm-static-aarch64-j9
        trigger: true
      - get: rpm-dynamic-aarch64-j9
        trigger: true
      - get: rpm-static-s390x
        trigger: true
      - get: rpm-dynamic-s390x
        trigger: true
      - get: rpm-static-s390x-j9
        trigger: true
      - get: rpm-dynamic-s390x-j9
        trigger: true
      - put: agent-version
        params: { bump: patch }
      - task: package-build-bundle
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ubuntu
          inputs:
            - name: instana-agent-docker-git
              path: .
            - name: agent-version
          run:
            path: bash
            args:
              - -ce
              - |
                date
                apt-get update
                apt-get install -yqq zip unzip
                zip -r target/context.zip .
          outputs:
            - name: target
      - put: build-bundle
        params:
          file: target/context.zip

  - name: amd64-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - get: agent-version
        passed: [prepare-build-bundle]
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-dynamic-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-static-amd64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-dynamic-amd64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-amd64
              params:
                  image: codebuild-dynamic-amd64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-amd64/artifacts/tag
            - put: agent-static-amd64
              params:
                  image: codebuild-static-amd64/artifacts/image.tar
                  additional_tags: codebuild-static-amd64/artifacts/tag
            - put: agent-dynamic-amd64-j9
              params:
                  image: codebuild-dynamic-amd64-j9/artifacts/image.tar
                  additional_tags: codebuild-dynamic-amd64-j9/artifacts/tag
            - put: agent-static-amd64-j9
              params:
                  image: codebuild-static-amd64-j9/artifacts/image.tar
                  additional_tags: codebuild-static-amd64-j9/artifacts/tag

  - name: arm64-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: agent-version
        passed: [ prepare-build-bundle ]
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-dynamic-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-static-arm64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-dynamic-arm64-j9
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: -j9
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-arm64
              params:
                  image: codebuild-dynamic-arm64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-arm64/artifacts/tag
            - put: agent-static-arm64
              params:
                  image: codebuild-static-arm64/artifacts/image.tar
                  additional_tags: codebuild-static-arm64/artifacts/tag
            - put: agent-dynamic-arm64-j9
              params:
                  image: codebuild-dynamic-arm64-j9/artifacts/image.tar
                  additional_tags: codebuild-dynamic-arm64-j9/artifacts/tag
            - put: agent-static-arm64-j9
              params:
                  image: codebuild-static-arm64-j9/artifacts/image.tar
                  additional_tags: codebuild-static-arm64-j9/artifacts/tag

  - name: s390x-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: agent-version
        passed: [ prepare-build-bundle ]
        trigger: true
      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: static
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
            - put: codebuild-dynamic-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((qa-instana-agent-key))
                  FLAVOR: dynamic
                  CLASSIFIER: ''
                  VERSION: ((.:agent-version))
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-s390x
              params:
                  image: codebuild-dynamic-s390x/artifacts/image.tar
                  additional_tags: codebuild-dynamic-s390x/artifacts/tag
            - put: agent-static-s390x
              params:
                  image: codebuild-static-s390x/artifacts/image.tar
                  additional_tags: codebuild-static-s390x/artifacts/tag

  - name: verify-amd64-static
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm
    on_error: *destroy-amd64-static-vm
    on_failure:  *destroy-amd64-static-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64
        trigger: true
        passed: [amd64-build]
      - load_var: digest
        file: agent-static-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static

  - name: verify-amd64-static-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-static-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-static-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-static-vm-j9
    on_error: *destroy-amd64-static-vm-j9
    on_failure:  *destroy-amd64-static-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-static-amd64-j9
        trigger: true
        passed: [amd64-build]
      - load_var: digest
        file: agent-static-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-static-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-static-j9

  - name: verify-amd64-dynamic
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm
    on_error: *destroy-amd64-dynamic-vm
    on_failure:  *destroy-amd64-dynamic-vm
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64
        trigger: true
        passed: [amd64-build]
      - load_var: digest
        file: agent-dynamic-amd64/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJDK
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic
  - name: verify-amd64-dynamic-j9
    max_in_flight: 1
    on_abort: &destroy-amd64-dynamic-vm-j9
      do:
        - task: destroy-vm
          file: instana-agent-docker-git/ci/destroy-verification-vm-task.yml
          vars:
            instance-name: instana-agent-amd64-dynamic-j9
            gcp-project: instana-agent-qa
            gcp-zone: europe-west3-c
    on_success:  *destroy-amd64-dynamic-vm-j9
    on_error: *destroy-amd64-dynamic-vm-j9
    on_failure:  *destroy-amd64-dynamic-vm-j9
    plan:
      - get: instana-agent-docker-git
        passed: [ amd64-build ]
      - get: agent-version
        passed: [ amd64-build ]
      - get: agent-dynamic-amd64-j9
        trigger: true
        passed: [amd64-build]
      - load_var: digest
        file: agent-dynamic-amd64-j9/digest
      - task: start-vm
        file: instana-agent-docker-git/ci/create-verification-vm-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          flavor: static
          instana-agent-key: ((qa-instana-agent-key))
          instance-name: instana-agent-amd64-dynamic-j9
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          gcp-project: instana-agent-qa
          gcp-zone: europe-west3-c
      - task: verify-image
        file: instana-agent-docker-git/ci/verify-e2e-task.yml
        vars:
          instana-agent-image: gcr.io/instana-agent-qa/instana-agent-docker@((.:digest))
          instana-agent-jdk: OpenJ9
          instana-api-key: ((qa-instana-api-token))
          instana-zone: agent-verification
          instana-host: agent-verification
          instance-name: instana-agent-amd64-dynamic-j9

  - name: verification-gate
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ s390x-build, arm64-build, amd64-build ]
      - get: agent-version
        trigger: true
        passed: [ s390x-build, arm64-build, amd64-build ]
      
      - get: agent-dynamic-amd64
        params:
          skip_download: true
        passed: [ verify-amd64-dynamic ]
      - get: agent-dynamic-amd64-j9
        params:
          skip_download: true
        passed: [ verify-amd64-dynamic-j9 ]
      - get: agent-dynamic-arm64
        params:
          skip_download: true
      - get: agent-dynamic-arm64-j9
        params:
          skip_download: true
      - get: agent-dynamic-s390x
        params:
          skip_download: true
      

      - get: agent-static-amd64
        params:
          skip_download: true
        passed: [ verify-amd64-static ]
      - get: agent-static-amd64-j9
        params:
          skip_download: true
        passed: [ verify-amd64-static-j9 ]
      - get: agent-static-arm64
        params:
          skip_download: true
      - get: agent-static-arm64-j9
        params:
          skip_download: true
      - get: agent-static-s390x
        params:
          skip_download: true

  - name: build-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ verification-gate ]
      - get: agent-version
        trigger: true
        passed: [ verification-gate ]

      - get: agent-dynamic-amd64
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-dynamic-s390x
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-dynamic-arm64
        params:
          skip_download: true
        passed: [ verification-gate ]

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - task: build-dynamic-multiarch-manifest
        privileged: true
        file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
        input_mapping:
          code: instana-agent-docker-git
        output_mapping:
          message: message
        vars:
          commit-sha: ((.:commit-sha))
          flavor: dynamic
          classifier: ''
          version: ((.:agent-version))
          docker-json-key: ((project-berlin-tests-gcp-instana-qa))
      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
  
  - name: build-multiarch-dynamic-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ verification-gate ]
      - get: agent-version
        trigger: true
        passed: [ verification-gate ]

      - get: agent-dynamic-amd64-j9
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-dynamic-arm64-j9
        params:
          skip_download: true
        passed: [ verification-gate ]

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - task: build-dynamic-multiarch-manifest
        privileged: true
        file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
        input_mapping:
          code: instana-agent-docker-git
        output_mapping:
          message: message
        vars:
          commit-sha: ((.:commit-sha))
          flavor: dynamic
          classifier: j9
          version: ((.:agent-version))
          docker-json-key: ((project-berlin-tests-gcp-instana-qa))
      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: build-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ verification-gate ]
      - get: agent-version
        trigger: true
        passed: [ verification-gate ]

      - get: agent-static-amd64
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-static-arm64
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-static-s390x
        params:
          skip_download: true
        passed: [ verification-gate ]

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - task: build-static-multiarch-manifest
        privileged: true
        file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
        input_mapping:
          code: instana-agent-docker-git
        output_mapping:
          message: message
        vars:
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          flavor: static
          classifier: ''
          docker-json-key: ((project-berlin-tests-gcp-instana-qa))
      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text

  - name: build-multiarch-static-j9
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ verification-gate ]
      - get: agent-version
        trigger: true
        passed: [ verification-gate ]

      - get: agent-static-amd64-j9
        params:
          skip_download: true
        passed: [ verification-gate ]
      - get: agent-static-arm64-j9
        params:
          skip_download: true
        passed: [ verification-gate ]

      - load_var: agent-version
        file: agent-version/number
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - task: build-static-multiarch-manifest
        privileged: true
        file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
        input_mapping:
          code: instana-agent-docker-git
        output_mapping:
          message: message
        vars:
          commit-sha: ((.:commit-sha))
          version: ((.:agent-version))
          flavor: static
          classifier: j9
          docker-json-key: ((project-berlin-tests-gcp-instana-qa))
      - put: slack-alert
        params:
          channel: '#tech-agent-delivery'
          text_file: message/text
