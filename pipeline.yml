---
# see https://concourse-ci.org/pipelines.html
resource_types:
  - name: codebuild
    type: registry-image
    source:
      repository: cedricziel/concourse-codebuild-resource
      tag: "0.1.14"
  - name: gcs-resource
    type: registry-image
    source:
      repository: frodenas/gcs-resource
resources:
  - name: instana-agent-docker-git
    type: git
    icon: github
    source:
      uri: https://github.com/instana/instana-agent-docker.git
      branch: ((branch))
      ignore_paths:
        - README.md
  - name: build-bundle
    type: s3
    icon: zip-disk
    source:
      bucket: instana-agent-images-codebuild
      versioned_file: context.zip
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
      region_name: us-west-2
      skip_download: true
  - name: codebuild-dynamic-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-amd64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-arm64
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-dynamic-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: codebuild-static-s390x
    type: codebuild
    icon: aws
    source:
      project: instana-agent-images-s390x
      region: us-west-2
      access_key_id: ((codebuild-key.key_id))
      secret_access_key: ((codebuild-key.key_secret))
  - name: agent-dynamic-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: ubi-latest-dynamic-aarch64
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-arm64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-amd64
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-amd64-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-dynamic-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-dynamic
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
  - name: agent-static-s390x
    type: registry-image
    icon: docker
    source:
      repository: gcr.io/instana-agent-qa/instana-agent-docker
      tag: latest-s390x-static
      username: _json_key
      password: ((project-berlin-tests-gcp-instana-qa))
jobs:
  - name: self-update
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
      - set_pipeline: self
        file: instana-agent-docker-git/pipeline.yml
  - name: prepare-build-bundle
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ self-update ]
      - task: package-build-bundle
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: ubuntu
          inputs:
            - name: instana-agent-docker-git
              path: .
          run:
            path: bash
            args:
              - -c
              - |
                date
                apt-get update
                apt-get install -yqq zip unzip
                #zip -r target/context.zip . --exclude @buildtools/codebuild/exclude.lst
                zip -r target/context.zip .
          outputs:
            - name: target
      - put: build-bundle
        params:
          file: target/context.zip

  - name: amd64-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: static
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
            - put: codebuild-dynamic-amd64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: amd64
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: dynamic
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/amd64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-amd64
              params:
                  image: codebuild-dynamic-amd64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-amd64/artifacts/tag
            - put: agent-static-amd64
              params:
                  image: codebuild-static-amd64/artifacts/image.tar
                  additional_tags: codebuild-static-amd64/artifacts/tag

  - name: arm64-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: static
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
            - put: codebuild-dynamic-arm64
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: arm64
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: dynamic
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/arm64
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-arm64
              params:
                  image: codebuild-dynamic-arm64/artifacts/image.tar
                  additional_tags: codebuild-dynamic-arm64/artifacts/tag
            - put: agent-static-arm64
              params:
                  image: codebuild-static-arm64/artifacts/image.tar
                  additional_tags: codebuild-static-arm64/artifacts/tag

  - name: s390x-build
    public: true
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ prepare-build-bundle ]
      - get: build-bundle
        trigger: true
        passed: [ prepare-build-bundle ]
      - load_var: s3-artifact-version
        file: build-bundle/version
        reveal: true
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          fail_fast: true
          steps:
            - put: codebuild-static-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: static
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
            - put: codebuild-dynamic-s390x
              params:
                source_version: ((.:s3-artifact-version))
                env_var_overrides:
                  ARCH: s390x
                  DOWNLOAD_KEY: ((download-key))
                  FLAVOR: dynamic
                  VERSION: changeme
                  BRANCH: ((.:commit-sha))
                  COMMIT_SHA: ((.:commit-sha))
                  TARGETPLATFORM: linux/s390x
      - in_parallel:
          fail_fast: true
          steps:
            - put: agent-dynamic-s390x
              params:
                  image: codebuild-dynamic-s390x/artifacts/image.tar
                  additional_tags: codebuild-dynamic-s390x/artifacts/tag
            - put: agent-static-s390x
              params:
                  image: codebuild-static-s390x/artifacts/image.tar
                  additional_tags: codebuild-static-s390x/artifacts/tag
  - name: build-multiarch-dynamic
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ s390x-build, arm64-build, amd64-build ]
      - get: codebuild-dynamic-amd64
        passed: [ amd64-build ]
      - get: codebuild-dynamic-arm64
        passed: [ arm64-build ]
      - get: codebuild-dynamic-s390x
        passed: [ s390x-build ]
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - in_parallel:
          steps:
            - task: build-dynamic-multiarch-manifest
              privileged: true
              file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
              input_mapping:
                code: instana-agent-docker-git
              vars:
                commit-sha: ((.:commit-sha))
                flavor: dynamic
                docker-json-key: ((project-berlin-tests-gcp-instana-qa))
  - name: build-multiarch-static
    max_in_flight: 1
    plan:
      - get: instana-agent-docker-git
        trigger: true
        passed: [ s390x-build, arm64-build, amd64-build ]
      - get: codebuild-static-amd64
        passed: [ amd64-build ]
      - get: codebuild-static-arm64
        passed: [ arm64-build ]
      - get: codebuild-static-s390x
        passed: [ s390x-build ]
      - load_var: commit-sha
        file: instana-agent-docker-git/.git/short_ref
        reveal: true
      - task: build-static-multiarch-manifest
        privileged: true
        file: instana-agent-docker-git/ci/create-multiarch-image-task.yml
        input_mapping:
          code: instana-agent-docker-git
        vars:
          commit-sha: ((.:commit-sha))
          flavor: static
          docker-json-key: ((project-berlin-tests-gcp-instana-qa))
