---
#
# (c) Copyright IBM Corp. 2022
# (c) Copyright Instana Inc.
#

# see https://concourse-ci.org/tasks.html
platform: linux
image_resource:
  type: registry-image
  source:
    repository: gcr.io/k8s-brewery/instana/concourse-dind
    tag: ubi8-min
    username: _json_key
    password: ((gcloud-agent-ci-account-key))
params:
  NEW_TAG: ((new_tag))
  RED_HAT_REGISTRY_PASSWORD: ((redhat-container-registry-5e9612d87512796c24e4aeef.password))
  RED_HAT_REGISTRY_USERNAME: ((redhat-container-registry-5e9612d87512796c24e4aeef.user))
  RED_HAT_API_TOKEN: ((redhat-container-registry-5e9612d87512796c24e4aeef.api-token))
  LATEST: ((latest))
inputs:
  - name: image
  - name: preflight
run:
  path: entrypoint.sh
  args:
  - bash
  - -ceu
  - |
      set -e

      # load docker file and read vars
      pushd image
      docker load -i image.tar
      export OLD_TAG=$(cat tag)
      export OLD_REPOSITORY=$(cat repository)
      popd

      # login to redhat
      echo $RED_HAT_REGISTRY_PASSWORD | docker login -u $RED_HAT_REGISTRY_USERNAME --password-stdin quay.io
      export RED_HAT_REGISTRY="quay.io/redhat-isv-containers/5e9612d87512796c24e4aeef"

      export DOCKER_CONFIG_REF="$HOME/.docker/config.json"

      echo "---> re-tagging images for Red Hat Container Registry"

      docker tag "$OLD_REPOSITORY:$OLD_TAG" "$RED_HAT_REGISTRY:$NEW_TAG"

      echo "---> pushing images to Red Hat Container Registry"
      docker push "$RED_HAT_REGISTRY:$NEW_TAG"

      pushd preflight
      chmod +x preflight-linux-amd64

      echo "---> preflight check"
      rm -rf artifacts/ && ./preflight-linux-amd64 check container "$RED_HAT_REGISTRY:$NEW_TAG" --submit \
        --pyxis-api-token=$RED_HAT_API_TOKEN \
        --certification-project-id=5e9612d87512796c24e4aeef \
        --docker-config=$DOCKER_CONFIG_REF

      echo "---> pushing additional tags to Red Hat Container Registry"
      docker tag "$RED_HAT_REGISTRY:$NEW_TAG" "$RED_HAT_REGISTRY:$OLD_TAG"
      docker push "$RED_HAT_REGISTRY:$OLD_TAG"
      if [ "${LATEST}" = 'true' ]; then
        docker tag "$RED_HAT_REGISTRY:$NEW_TAG" "$RED_HAT_REGISTRY:latest"
        docker push "$RED_HAT_REGISTRY:latest"
      fi